# Choose optimal Simon design:
opt.index <- which.min(all.designs2$out[, "EN(p0)"])
simon.des2 <- all.designs2$out[opt.index, ]
##### Obtain bias for range of true response probabilities ####
theta.vec2 <- seq(0.1, 0.9, 0.1) # Vector of true response probabilities
summary.data2 <- raw.data2 <- vector("list", length(theta.vec2))
stop.early.count2 <- rep(NA, length(theta.vec2))
for(i in 1:length(theta.vec2)){
one.run <- pwbSimon(theta=theta.vec2[i],
des=simon.des2,
nsims=nsims)
raw.data2[[i]] <- one.run$results
summary.data2[[i]] <- one.run$ests
stop.early.count2[i] <- one.run$ests["Stopped early", "nsims"]/nsims
}
##### Obtain bias for range of true response probabilities ####
theta.vec2 <- seq(0.5, 0.9, 0.05) # Vector of true response probabilities
summary.data2 <- raw.data2 <- vector("list", length(theta.vec2))
stop.early.count2 <- rep(NA, length(theta.vec2))
for(i in 1:length(theta.vec2)){
one.run <- pwbSimon(theta=theta.vec2[i],
des=simon.des2,
nsims=nsims)
raw.data2[[i]] <- one.run$results
summary.data2[[i]] <- one.run$ests
stop.early.count2[i] <- one.run$ests["Stopped early", "nsims"]/nsims
}
all.simon2 <- do.call(rbind, summary.data2)
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot.sub2 <- ggplot(data=all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.colours <- setNames(c("#F8766D", "#A3A500", "#00BF7D", "#00B0F6", "#E76BF3"),
c("All (naive)", "All (precision-weghted)", "Complete (naive)", "Stopped early (naive)", "UMVUE"))
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot.sub2 <- ggplot(data=all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot.sub2 <- ggplot(data=all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(0-max(abs(bias)), 0+max(abs(bias)))
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot.sub2 <- ggplot(data=all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(0-max(abs(bias)), 0+max(abs(bias)))+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot.sub2 <- ggplot(data=all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(0-max(abs(bias)), 0+max(abs(bias)))+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot.sub2 <- ggplot(data=all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
# ylim(0-max(abs(bias)), 0+max(abs(bias)))+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot.sub2 <- ggplot(data=all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
# ylim(0-max(abs(bias)), 0+max(abs(bias)))+
ylim(-0.2, 0.2)+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.sub.df2 <- all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ]
simon.plot.sub2 <- ggplot(data=simon.sub.df2, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(0-max(abs(simon.sub.df2$bias)), 0+max(abs(simon.sub.df2$bias)))+
# ylim(-0.2, 0.2)+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.sub.df2 <- all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ]
simon.plot.sub2 <- ggplot(data=simon.sub.df2, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
#ylim(0-max(abs(simon.sub.df2$bias)), 0+max(abs(simon.sub.df2$bias)))+
ylim(max(abs(simon.sub.df2$bias)) * c(-1,1) )+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.sub.df2 <- all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weghted)"), ]
simon.plot.sub2 <- ggplot(data=simon.sub.df2, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design (p0=0.8, p1=0.9)",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec2, y=-0.015, label=round(stop.early.count2,2))+
geom_vline(aes(xintercept=0.8), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.9), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(simon.sub.df2$bias)) * c(-1.1, 1.1) )+
scale_x_continuous(breaks=theta.vec2)+
scale_color_manual(values=simon.colours)
simon.plot.sub2
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.sub.df <- all.simon[all.simon$type %in% c("All (naive)", "All (precision-weghted)"), ]
devtools::document()
rm(i)
devtools::document()
usethis::use_dev_package("singlearm", type="Suggests", remote="mjg211/singlearm")
# If package is in github, use, for example
usethis::use_dev_package("curtailment", type="Suggests", remote="martinlaw/curtailment")
# If package is in github, use, for example
usethis::use_dev_package("curtailment", type="Suggests", remote="martinlaw/curtailment")
# Add any packages that are used in the code to the "imports" section of the Description file:
usethis::use_package("ggplot2", type="Suggests")
usethis::use_package("gridExtra", type="Suggests")
devtools::document()
usethis::use_package("rmarkdown", type="Suggests")
usethis::use_package("markdown", type="Suggests")
devtools::document()
usethis::use_package("rmarkdown")
devtools::document()
?usethis::use_dev_package
usethis::use_dev_package("singlearm", type="Imports", remote="mjg211/singlearm")
devtools::document()
# What happens when you weight the estimates only?
nsims <- 1e5
N <- 1000
theta <- 0.3
responses <- rbinom(nsims, N, theta)
theta.hat <- responses/N
naive <- mean(theta.hat-theta)
se <- sqrt(theta.hat*(1-theta.hat)/N)
pwbias <- weighted.mean(x=theta.hat-theta, w=1/se^2)
pw.est <- weighted.mean(x=theta.hat, w=1/se^2)-theta
identical(pw.est, pwbias)
hist(pw.est)
pwbias
pw.est
all.equal(pw.est, pwbias)
########### Single trial with early stopping
nsim = 10^4
N = 2428
RD_interim = RD_final = SE_interim = SE_final = pval = rep(NA, N)
set.seed(7)
for(i in 1:nsim){
# Stage 1:
X0 = rbinom(N/4, 1, 0.2)
X1 = rbinom(N/4, 1, 0.15)
EE = sum(X1) # Events on Experimental arm at interim
EN = N/4 - EE  # Non-events on Experimental arm at interim
CE = sum(X0) # Events on Control arm at interim
CN = N/4 - CE # Non-events on Control arm at interim
RD_interim[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_interim[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
pval[i] = pnorm(RD_interim[i]/SE_interim[i])
# Stage 2:
Y0 = rbinom(N/4, 1, 0.2)
Y1 = rbinom(N/4, 1, 0.15)
EE = sum(X1+Y1) # Events on Experimental arm at end
EN = N/2 - EE # Non-events on Experimental arm at end
CE = sum(X0+Y0) # Events on Control arm at end
CN = N/2 - CE # Non-events on Control arm at end
RD_final[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_final[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
}
stop_early = (pval <= 0.001)
continue = (pval > 0.001)
# Plot
plot(RD_interim[continue], RD_final[continue], col = 'blue',
xlim = c(-0.15, 0.05), ylim = c(-0.1, 0),
xlab = 'Risk difference interim',
ylab = 'Risk difference final')
points(RD_interim[stop_early], RD_final[stop_early], col = 'red')
# Table (slide 18)
rbind(
c(sum(stop_early), mean(RD_interim[stop_early]) + 0.05,
mean(SE_interim[stop_early])),
c(sum(continue), mean(RD_final[continue]) + 0.05,
mean(SE_final[continue])),
c(nsim, mean(c(RD_interim[stop_early], RD_final[continue])) + 0.05,
mean(c(SE_interim[stop_early],SE_final[continue]))),
c(nsim, weighted.mean(c(RD_interim[stop_early], RD_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)) + 0.05,
weighted.mean(c(SE_interim[stop_early], SE_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)))
)
########### 4 more studies with fixed sample size
RD_fixed = SE_fixed = matrix(nrow = nsim, ncol = 4)
for(j in 1:4){
for(i in 1:nsim){
X0 = rbinom(N/2, 1, 0.2)
X1 = rbinom(N/2, 1, 0.15)
EE = sum(X1)
EN = N/2 - EE
CE = sum(X0)
CN = N/2 - CE
RD_fixed[i,j] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_fixed[i,j] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
}
# Meta-analysis
MA_all = MA_exclude = rep(NA, nsim)
for(i in 1:nsim){
if(pval[i] <= 0.001){
MA_all[i] = weighted.mean(c(RD_interim[i], RD_fixed[i,]),
c(1/SE_interim[i]^2, 1/SE_fixed[i,]^2))
MA_exclude[i] = weighted.mean(c(RD_fixed[i,]), c(1/SE_fixed[i,]^2))
} else {
MA_all[i] = MA_exclude[i] = weighted.mean(c(RD_final[i], RD_fixed[i,]),
c(1/SE_final[i]^2, 1/SE_fixed[i,]^2))
}
# Table (slide 19)
rbind(
c(nsim, 5, mean(MA_all)+0.05, sd(MA_all)),
c(nsim, 4+mean(continue), mean(MA_exclude)+0.05, sd(MA_exclude))
)
rbind(
c(sum(stop_early), mean(RD_interim[stop_early]) + 0.05,
mean(SE_interim[stop_early])),
c(sum(continue), mean(RD_final[continue]) + 0.05,
mean(SE_final[continue])),
c(nsim, mean(c(RD_interim[stop_early], RD_final[continue])) + 0.05,
mean(c(SE_interim[stop_early],SE_final[continue]))),
c(nsim, weighted.mean(c(RD_interim[stop_early], RD_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)) + 0.05,
weighted.mean(c(SE_interim[stop_early], SE_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)))
)
usethis::use_vignette("two_arm_two_stage_example")
library(pwb)
nsim = 10^4
N = 2428
RD_interim = RD_final = SE_interim = SE_final = pval = rep(NA, N)
set.seed(7)
?abline
plot(RD_interim[continue], RD_final[continue], col = 'blue',
xlim = c(-0.15, 0.05), ylim = c(-0.1, 0),
xlab = 'Risk difference interim',
ylab = 'Risk difference final')
abline(h=-0.05)
abline(v=-0.05)
legend("bottomright", inset=0.02)
?signif
twoArmTwoStage <- function(N, nsim, p1){
RD_interim = RD_final = SE_interim = SE_final = pval = rep(NA, N)
for(i in 1:nsim){
# Stage 1:
X0 = rbinom(N/4, 1, 0.2)
X1 = rbinom(N/4, 1, p1)
EE = sum(X1) # Events on Experimental arm at interim
EN = N/4 - EE  # Non-events on Experimental arm at interim
CE = sum(X0) # Events on Control arm at interim
CN = N/4 - CE # Non-events on Control arm at interim
RD_interim[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_interim[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
pval[i] = pnorm(RD_interim[i]/SE_interim[i])
# Stage 2:
Y0 = rbinom(N/4, 1, 0.2)
Y1 = rbinom(N/4, 1, p1)
EE = sum(X1+Y1) # Events on Experimental arm at end
EN = N/2 - EE # Non-events on Experimental arm at end
CE = sum(X0+Y0) # Events on Control arm at end
CN = N/2 - CE # Non-events on Control arm at end
RD_final[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_final[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
}
stop_early = (pval <= 0.001)
continue = (pval > 0.001)
trueRD <- 0.2-p1 # True RD no longer fixed at 0.05
# Table (slide 18)
one.trial <- rbind(
c(sum(stop_early), mean(RD_interim[stop_early]) + trueRD,
mean(SE_interim[stop_early])),
c(sum(continue), mean(RD_final[continue]) + trueRD,
mean(SE_final[continue])),
c(nsim, mean(c(RD_interim[stop_early], RD_final[continue])) + trueRD,
mean(c(SE_interim[stop_early],SE_final[continue]))),
c(nsim, weighted.mean(c(RD_interim[stop_early], RD_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)) + trueRD,
weighted.mean(c(SE_interim[stop_early], SE_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)))
)
colnames(one.trial) <- c("nsims", "Bias in RD", "Mean SE of RD")
rownames(one.trial) <- c("Stopped early", "Not stopped early", "All", "All, precision weighted")
one.trial
}
10^4
1e4
twoArmTwoStage <- function(N=2428, nsim=1e4, p1=0.2){
RD_interim = RD_final = SE_interim = SE_final = pval = rep(NA, N)
for(i in 1:nsim){
# Stage 1:
X0 = rbinom(N/4, 1, 0.2)
X1 = rbinom(N/4, 1, p1)
EE = sum(X1) # Events on Experimental arm at interim
EN = N/4 - EE  # Non-events on Experimental arm at interim
CE = sum(X0) # Events on Control arm at interim
CN = N/4 - CE # Non-events on Control arm at interim
RD_interim[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_interim[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
pval[i] = pnorm(RD_interim[i]/SE_interim[i])
# Stage 2:
Y0 = rbinom(N/4, 1, 0.2)
Y1 = rbinom(N/4, 1, p1)
EE = sum(X1+Y1) # Events on Experimental arm at end
EN = N/2 - EE # Non-events on Experimental arm at end
CE = sum(X0+Y0) # Events on Control arm at end
CN = N/2 - CE # Non-events on Control arm at end
RD_final[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_final[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
}
stop_early = (pval <= 0.001)
continue = (pval > 0.001)
trueRD <- 0.2-p1 # True RD no longer fixed at 0.05
# Table (slide 18)
one.trial <- rbind(
c(sum(stop_early), mean(RD_interim[stop_early]) + trueRD,
mean(SE_interim[stop_early])),
c(sum(continue), mean(RD_final[continue]) + trueRD,
mean(SE_final[continue])),
c(nsim, mean(c(RD_interim[stop_early], RD_final[continue])) + trueRD,
mean(c(SE_interim[stop_early],SE_final[continue]))),
c(nsim, weighted.mean(c(RD_interim[stop_early], RD_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)) + trueRD,
weighted.mean(c(SE_interim[stop_early], SE_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)))
)
colnames(one.trial) <- c("nsims", "Bias in RD", "Mean SE of RD")
rownames(one.trial) <- c("Stopped early", "Not stopped early", "All", "All, precision weighted")
one.trial
}
twoArmTwoStage()
twoArmTwoStage <- function(N=2428, nsim=1e4, p1=0.15){
RD_interim = RD_final = SE_interim = SE_final = pval = rep(NA, N)
for(i in 1:nsim){
# Stage 1:
X0 = rbinom(N/4, 1, 0.2)
X1 = rbinom(N/4, 1, p1)
EE = sum(X1) # Events on Experimental arm at interim
EN = N/4 - EE  # Non-events on Experimental arm at interim
CE = sum(X0) # Events on Control arm at interim
CN = N/4 - CE # Non-events on Control arm at interim
RD_interim[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_interim[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
pval[i] = pnorm(RD_interim[i]/SE_interim[i])
# Stage 2:
Y0 = rbinom(N/4, 1, 0.2)
Y1 = rbinom(N/4, 1, p1)
EE = sum(X1+Y1) # Events on Experimental arm at end
EN = N/2 - EE # Non-events on Experimental arm at end
CE = sum(X0+Y0) # Events on Control arm at end
CN = N/2 - CE # Non-events on Control arm at end
RD_final[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_final[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
}
stop_early = (pval <= 0.001)
continue = (pval > 0.001)
trueRD <- 0.2-p1 # True RD no longer fixed at 0.05
# Table (slide 18)
one.trial <- rbind(
c(sum(stop_early), mean(RD_interim[stop_early]) + trueRD,
mean(SE_interim[stop_early])),
c(sum(continue), mean(RD_final[continue]) + trueRD,
mean(SE_final[continue])),
c(nsim, mean(c(RD_interim[stop_early], RD_final[continue])) + trueRD,
mean(c(SE_interim[stop_early],SE_final[continue]))),
c(nsim, weighted.mean(c(RD_interim[stop_early], RD_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)) + trueRD,
weighted.mean(c(SE_interim[stop_early], SE_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)))
)
colnames(one.trial) <- c("nsims", "Bias in RD", "Mean SE of RD")
rownames(one.trial) <- c("Stopped early", "Not stopped early", "All", "All, precision weighted")
one.trial
}
twoArmTwoStage()
twoArmTwoStage <- function(N=2428, nsim=1e4, p1=0.15){
RD_interim = RD_final = SE_interim = SE_final = pval = rep(NA, N)
for(i in 1:nsim){
# Stage 1:
X0 = rbinom(N/4, 1, 0.2)
X1 = rbinom(N/4, 1, p1)
EE = sum(X1) # Events on Experimental arm at interim
EN = N/4 - EE  # Non-events on Experimental arm at interim
CE = sum(X0) # Events on Control arm at interim
CN = N/4 - CE # Non-events on Control arm at interim
RD_interim[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_interim[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
pval[i] = pnorm(RD_interim[i]/SE_interim[i])
# Stage 2:
Y0 = rbinom(N/4, 1, 0.2)
Y1 = rbinom(N/4, 1, p1)
EE = sum(X1+Y1) # Events on Experimental arm at end
EN = N/2 - EE # Non-events on Experimental arm at end
CE = sum(X0+Y0) # Events on Control arm at end
CN = N/2 - CE # Non-events on Control arm at end
RD_final[i] = (EE/(EE+EN)) - (CE/(CE+CN))
SE_final[i] = sqrt(EE*EN/(EE+EN)^3 + CE*CN/(CE+CN)^3)
}
stop_early = (pval <= 0.001)
continue = (pval > 0.001)
trueRD <- 0.2-p1 # True RD no longer fixed at 0.05
# Table (slide 18)
one.trial <- rbind(
c(sum(stop_early), mean(RD_interim[stop_early]) + trueRD,
mean(SE_interim[stop_early])),
c(sum(continue), mean(RD_final[continue]) + trueRD,
mean(SE_final[continue])),
c(nsim, mean(c(RD_interim[stop_early], RD_final[continue])) + trueRD,
mean(c(SE_interim[stop_early],SE_final[continue]))),
c(nsim, weighted.mean(c(RD_interim[stop_early], RD_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)) + trueRD,
weighted.mean(c(SE_interim[stop_early], SE_final[continue]),
c(1/SE_interim[stop_early]^2, 1/SE_final[continue]^2)))
)
colnames(one.trial) <- c("nsims", "Bias in RD", "Mean SE of RD")
rownames(one.trial) <- c("Stopped early", "Not stopped early", "All", "All, precision weighted")
signif(one.trial, 3)
}
twoArmTwoStage()
twoArmTwoStage(p1=0.2)
twoArmTwoStage(p1=0.25)
twoArmTwoStage(p1=0.1)
