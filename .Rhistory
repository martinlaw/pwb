mean.se[i] <- mean(ses)
}
bias.df <- data.frame(bias=bias,
se=mean.se,
lower=bias-1.95*mean.se,
upper=bias+1.95*mean.se,
theta=theta.MA)
bias.df
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="grey70")+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
bias.df$lower
bias.df$upper
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="band")+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red")+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
#geom_line()+
#geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red")#+
#labs(x="True response probability theta",
y="Bias (estimate - theta)",
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
#geom_line()+
#geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red")#+
#labs(x="True response probability theta",
#     y="Bias (estimate - theta)",
#    title="Bias in meta-analysis",
#     subtitle="No adaptive designs")+
#geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
#ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
#scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
#geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red")#+
#labs(x="True response probability theta",
#     y="Bias (estimate - theta)",
#    title="Bias in meta-analysis",
#     subtitle="No adaptive designs")+
#geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
#ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
#scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red")#+
#labs(x="True response probability theta",
#     y="Bias (estimate - theta)",
#    title="Bias in meta-analysis",
#     subtitle="No adaptive designs")+
#geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
#ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
#scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)#+
#labs(x="True response probability theta",
#     y="Bias (estimate - theta)",
#    title="Bias in meta-analysis",
#     subtitle="No adaptive designs")+
#geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
#ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
#scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")
#geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
#ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
#scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")#+
#ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
#scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")#+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )#+
#scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")#+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )#+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")#+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )#+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")#+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
#  ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
bias.df$bias
abs(bias.df$bias)
max(abs(bias.df$bias))
max(abs(bias.df$bias)) * c(-1, 1)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
# ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
# ylim(max(abs(bias.df$bias)) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(c(bias.df$lower, bias.df$upper))) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
# Simulate the trials:
nsims <- 10000
theta.MA <- seq(0.1, 0.9, 0.1)
bias <- rep(NA, length(theta.MA))
mean.se <- rep(NA, length(theta.MA))
for(i in 1:length(theta.MA)){
MA.results <- pwb::simMeta(N=100, theta=theta.MA[i], n.studies=5, nsims=nsims)
wtdmeans <- rep(NA, nsims)
ses <- rep(NA, nsims)
for(j in 1:nsims){
var.studies <- MA.results$se[j, ]^2
wi <- 1/var.studies
wtdmeans[j] <- weighted.mean(x=MA.results$theta.hat[j, ], w=wi)
var.ma <- 1/sum(wi)
ses[j] <- sqrt(var.ma)
}
bias[i] <- mean(wtdmeans-theta.MA[i])
mean.se[i] <- mean(ses)
}
bias.df <- data.frame(bias=bias,
se=mean.se,
lower=bias-1.95*mean.se,
upper=bias+1.95*mean.se,
theta=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(c(bias.df$lower, bias.df$upper))) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
# Simulate the trials:
nsims <- 100000
theta.MA <- seq(0.1, 0.9, 0.1)
bias <- rep(NA, length(theta.MA))
mean.se <- rep(NA, length(theta.MA))
for(i in 1:length(theta.MA)){
MA.results <- pwb::simMeta(N=100, theta=theta.MA[i], n.studies=5, nsims=nsims)
wtdmeans <- rep(NA, nsims)
ses <- rep(NA, nsims)
for(j in 1:nsims){
var.studies <- MA.results$se[j, ]^2
wi <- 1/var.studies
wtdmeans[j] <- weighted.mean(x=MA.results$theta.hat[j, ], w=wi)
var.ma <- 1/sum(wi)
ses[j] <- sqrt(var.ma)
}
bias[i] <- mean(wtdmeans-theta.MA[i])
mean.se[i] <- mean(ses)
}
bias.df <- data.frame(bias=bias,
se=mean.se,
lower=bias-1.95*mean.se,
upper=bias+1.95*mean.se,
theta=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(c(bias.df$lower, bias.df$upper))) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
devtools::document()
rm(list = c("event", "i", "j", "M", "mp", "n", "nsims", "se", "se.ma", "theta.hat", "var.ma", "var.studies", "wi", "wtdmeans"))
devtools::document()
78/60
library(pwb)
library(ggplot2)
# Simulate single-stage design:
nsims <- 1e4
N <- 100
theta.vec <- seq(0.1, 0.9, 0.1)
unadjusted <- pwbias <- numeric(length(theta.vec))
se.list <- vector("list", length(theta.vec))
for (i in 1:length(theta.vec)) {
responses <- rbinom(nsims, N, theta.vec[i])
theta.hat <- responses/N
unadjusted[i] <- mean(theta.hat-theta.vec[i])
se <- sqrt(theta.hat*(1-theta.hat)/N)
pwbias[i] <- weighted.mean(x=theta.hat-theta.vec[i], w=1/se^2)
se.list[[i]] <- se
}
dat <- data.frame(theta=rep(theta.vec, times=2),
bias=c(unadjusted, pwbias),
type=rep(c("unadjusted", "precision weighted"), each=length(theta.vec)))
se.df <- data.frame(se=unlist(se.list),
theta=rep(as.character(theta.vec), each=nsims))
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)
# Simulate single-stage design:
nsims <- 1e5
N <- 100
theta.vec <- seq(0.1, 0.9, 0.1)
unadjusted <- pwbias <- numeric(length(theta.vec))
se.list <- vector("list", length(theta.vec))
for (i in 1:length(theta.vec)) {
responses <- rbinom(nsims, N, theta.vec[i])
theta.hat <- responses/N
unadjusted[i] <- mean(theta.hat-theta.vec[i])
se <- sqrt(theta.hat*(1-theta.hat)/N)
pwbias[i] <- weighted.mean(x=theta.hat-theta.vec[i], w=1/se^2)
se.list[[i]] <- se
}
dat <- data.frame(theta=rep(theta.vec, times=2),
bias=c(unadjusted, pwbias),
type=rep(c("unadjusted", "precision weighted"), each=length(theta.vec)))
se.df <- data.frame(se=unlist(se.list),
theta=rep(as.character(theta.vec), each=nsims))
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)
devtools::document()
rm(list = c("dat", "i", "N", "nsims", "pwbias", "responses", "se", "se.df", "se.list", "theta.hat", "theta.vec"))
devtools::document()
dat
range(dat$bias)
range(dat$bias, na.rm=T)
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)+
scale_y_continuous(limits = range(dat$bias, na.rm=T))
N <- 1000
unadjusted <- pwbias <- numeric(length(theta.vec))
for (i in 1:length(theta.vec)) {
responses <- rbinom(nsims, N, theta.vec[i])
theta.hat <- responses/N
unadjusted[i] <- mean(theta.hat-theta.vec[i])
se <- sqrt(theta.hat*(1-theta.hat)/N)
pwbias[i] <- weighted.mean(x=theta.hat-theta.vec[i], w=1/se^2)
}
dat1000 <- data.frame(theta=rep(theta.vec, times=2),
bias=c(unadjusted, pwbias),
type=rep(c("unadjusted", "precision weighted"), each=length(theta.vec)))
ggplot(data=dat1000, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=1000")+
scale_x_continuous(breaks=theta.vec)+
scale_y_continuous(limits = range(dat$bias, na.rm=T))
dat1000
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)+
scale_y_continuous(limits = range(dat$bias, na.rm=T))+
theme(legend.position="bottom")
N <- 1000
unadjusted <- pwbias <- numeric(length(theta.vec))
for (i in 1:length(theta.vec)) {
responses <- rbinom(nsims, N, theta.vec[i])
theta.hat <- responses/N
unadjusted[i] <- mean(theta.hat-theta.vec[i])
se <- sqrt(theta.hat*(1-theta.hat)/N)
pwbias[i] <- weighted.mean(x=theta.hat-theta.vec[i], w=1/se^2)
}
dat1000 <- data.frame(theta=rep(theta.vec, times=2),
bias=c(unadjusted, pwbias),
type=rep(c("unadjusted", "precision weighted"), each=length(theta.vec)))
ggplot(data=dat1000, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=1000")+
scale_x_continuous(breaks=theta.vec)+
scale_y_continuous(limits = range(dat$bias, na.rm=T))+
theme(legend.position="bottom")
ggplot(data=dat, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=100")+
scale_x_continuous(breaks=theta.vec)+
scale_y_continuous(limits = range(dat$bias, na.rm=T))+
theme(legend.position="bottom")
N <- 1000
unadjusted <- pwbias <- numeric(length(theta.vec))
for (i in 1:length(theta.vec)) {
responses <- rbinom(nsims, N, theta.vec[i])
theta.hat <- responses/N
unadjusted[i] <- mean(theta.hat-theta.vec[i])
se <- sqrt(theta.hat*(1-theta.hat)/N)
pwbias[i] <- weighted.mean(x=theta.hat-theta.vec[i], w=1/se^2)
}
dat1000 <- data.frame(theta=rep(theta.vec, times=2),
bias=c(unadjusted, pwbias),
type=rep(c("unadjusted", "precision weighted"), each=length(theta.vec)))
ggplot(data=dat1000, mapping=aes(x=theta, y=bias, col=type))+
geom_line()+
labs(title="Bias for single-arm, single-stage trial with N=1000")+
scale_x_continuous(breaks=theta.vec)+
scale_y_continuous(limits = range(dat$bias, na.rm=T))+
theme(legend.position="bottom")
ggplot(data=se.df, mapping=aes(x=theta, y=se))+
geom_boxplot()
# Simulate the trials:
nsims <- 10000
theta.MA <- seq(0.1, 0.9, 0.1)
pwbias <- rep(NA, length(theta.MA))
pwbias2 <- rep(NA, length(theta.MA))
mean.se <- rep(NA, length(theta.MA))
for(i in 1:length(theta.MA)){
MA.results <- pwb::simMeta(N=100, theta=theta.MA[i], n.studies=5, nsims=nsims)
wtdmeans <- rep(NA, nsims)
wtdmeans2 <- rep(NA, nsims)
ses <- rep(NA, nsims)
for(j in 1:nsims){
var.studies <- MA.results$se[j, ]^2
wi <- 1/var.studies
wtdmeans[j] <- weighted.mean(x=MA.results$theta.hat[j, ], w=wi)
wtdmeans2[j] <- weighted.mean(x=MA.results$theta.hat[j, ]-theta.MA[i], w=wi)
var.ma <- 1/sum(wi)
ses[j] <- sqrt(var.ma)
}
pwbias[i] <- mean(wtdmeans-theta.MA[i])
pwbias2[i] <- mean(wtdmeans2)
mean.se[i] <- mean(ses)
}
bias.df <- data.frame(bias=pwbias,
bias2=pwbias2,
se=mean.se,
lower=bias-1.95*mean.se,
upper=bias+1.95*mean.se,
theta=theta.MA)
bias.df
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (precision weighted estimate - theta)",
title="Bias in meta-analysis",
subtitle="No adaptive designs")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(c(bias.df$lower, bias.df$upper))) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
ggplot(data=bias.df, mapping=aes(x=theta, y=bias))+
geom_line()+
geom_point()+
geom_ribbon(aes(x=theta, ymin=lower, ymax=upper), fill="red", alpha=0.1)+
labs(x="True response probability theta",
y="Bias (precision weighted estimate - theta)",
title="Bias in meta-analysis studies",
subtitle="Five non-adaptive single-arm trials, N=100")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
ylim(max(abs(c(bias.df$lower, bias.df$upper))) * c(-1, 1) )+
scale_x_continuous(breaks=theta.MA)
library(pwb)
library(ggplot2)
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.sub.df2 <- all.simon2[all.simon2$type %in% c("All (naive)", "All (precision-weighted)"), ]
devtools::document()
rm(list = c("i", "j", "N", "nsims", "pwbias", "responses", "se", "theta.hat", "var.ma", "var.studies", "wi", "wtdmeans"))
devtools::document()
