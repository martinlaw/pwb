y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0,1,0.1))
gs.plot
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
gs.plot2 <- ggplot(data=all.gs[all.gs$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0.2,0.8,0.1))
gs.plot2
stop.early.count <- round(all.gs$nsims[stop.early.count.index]/1e5, 3)
#### Plot bias for all theta values ####
gs.plot <- ggplot(data=all.gs, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0,1,0.1))
gs.plot
all.gs
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
gs.plot2 <- ggplot(data=all.gs[all.gs$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0.2,0.8,0.1))
gs.plot2
theta.vec
(data=all.gs, mapping=aes(x=theta, y=bias, col=type))
#### Plot bias for all theta values ####
gs.plot <- ggplot(data=all.gs, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
gs.plot
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
gs.plot2 <- ggplot(data=all.gs[all.gs$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
gs.plot2
# showTable: shows results for single value of theta
#
# Arguments:
#
# theta (required)
# latex: show Latex code for table (TRUE/FALSE)
# digit: number of rounding digits for bias and SE
#
showTable <- function(bias.df, theta, latex=FALSE, digit=4){
single.theta.df <- bias.df[abs(bias.df$theta-theta)<0.001, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:bias"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(bias.df=all.simon, theta=0.4)
showTable(bias.df=all.gs, theta=0.4)
# See results for individual theta:
showTable(bias.df=all.gs, theta=0.4)
rm(list=ls())
##### How to approach #####
#
# Run this file
#
# Run simon_sim.R and examine the output (plot, and tables if desired)
#
# Run GS_sim.R and examine the output (plot, and tables if desired)
#
# To see to see workings (if desired), look at simon_example.R for an example
# outside of R functions, and pwbSimon.R and pwbGS.R for actual functions.
install.packages("librarian")
librarian::shelf(ggplot2, clinfun, xtable, DHARMa, martinlaw/curtailment, mjg211/singlearm)
# functions for finding precision weighted bias and displaying results:
source("R/pwbSimon.R")
source("R/pwbGS.R")
source("R/showTable.R")
#### Guide to new files ####
#
# simon_example.R
# For a single Simon design, obtains bias for a single true response rate.
# Script is self-contained to more easily examine the code.
#
# pwbSimon.R
# Function. For a single Simon design, obtains bias for a single true response rate.
#
# simon_sim.R
# Uses the function pwbSimon() to obtain bias for a range of true response rates.
# Finds estimates for UMVUE.
# Plots the bias.
# Uses the function showTable() to show results (bias and SE) for single response rates
#
# pwbGS.R
# Function. For a single group sequential design, obtains bias for a single true response rate.
#
# GS_sim.R
# Uses the function pwbGS() to obtain bias for a range of true response rates.
# Plots the bias.
# Uses the function showTable() to show results (bias and SE) for single response rates.
#
install.packages("librarian")
librarian::shelf(ggplot2, clinfun, xtable, DHARMa, martinlaw/curtailment, mjg211/singlearm)
# functions for finding precision weighted bias and displaying results:
source("R/pwbSimon.R")
source("R/pwbGS.R")
source("R/showTable.R")
# This script simulates the results of a Simon design for a vector of response rates.
# We vary response rate theta from 0.1 to 0.9
#### Find Simon designs and select optimal designs ####
all.designs <- clinfun::ph2simon(pu=0.5, pa=0.6, ep1=0.05, ep2=0.1, nmax=500)
# Choose optimal Simon design:
opt.index <- which.min(all.designs$out[, "EN(p0)"])
des <- all.designs$out[opt.index, ]
##### Obtain bias for range of true response probabilities ####
theta.vec <- seq(0.1, 0.9, 0.1)
summary.data <- vector("list", length(theta.vec))
raw.data <- vector("list", length(theta.vec))
for(i in 1:length(theta.vec)){
one.run <- pwbSimon(theta=theta.vec[i], des=des, nsims=1e5)
raw.data[[i]] <- one.run$results
summary.data[[i]] <- one.run$ests
}
all.simon <- do.call(rbind, summary.data)
stop.early.count.index <- grepl("Stopped early", rownames(all.simon))
stop.early.count <- round(all.simon$nsims[stop.early.count.index]/1e5, 2)
##### UMVUE for Simon design #####
d2 <- des_gs(J=2,
pi0=0.5,
pi1=0.6,
alpha=0.05,
beta=0.1,
Nmin=233,
Nmax=233,
futility=TRUE,
efficacy=FALSE,
optimality="null_ess",
summary=TRUE)
est <- est_gs(des=d2, pi=theta.vec, method=c("umvue"))
umvue <- data.frame(matrix(ncol = length(names(all.simon)),
nrow = nrow(est$perf)))
names(umvue) <- names(all.simon)
umvue$theta <- est$perf$pi
umvue$bias <- est$perf$`Bias(hat(pi)|pi)`
umvue$type <- "UMVUE"
all.simon <- rbind(all.simon, umvue)
#### Plot bias for all theta values ####
simon.plot <- ggplot(data=all.simon, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot2 <- ggplot(data=all.simon[all.simon$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot2
# See results for individual theta:
showTable(bias.df=all.simon, theta=0.4)
gridExtra::grid.arrange(simon.plot, simon.plot2)
gridExtra::grid.arrange(simon.plot, simon.plot2, ncol=2)
gridExtra::grid.arrange(simon.plot, simon.plot2)
# See results for individual theta:
showTable(bias.df=all.simon, theta=0.4)
# This script simulates the results of single-arm multi-stage with binary
# outcome, for a single value of response rate theta.
#
# Find a multi-stage design for p0=0.5, p1=0.6, alpha=0.1, power=0.8 and
# satisfying various other parameters:
ad <- curtailment::singlearmDesign(nmin=50,
nmax=140,
C=20,
minstop=40,
p0=0.5,
p1=0.6,
alpha=0.1,
power=0.8,
minthetaE=1,
maxthetaF=0,
max.combns=1e3)
# Store interim points and corresponding stopping boundaries
diag <- curtailment::drawDiagram(ad) # diagram of design and stopping bounds
finite.bounds <- diag$bounds.mat[!is.infinite(diag$bounds.mat$success) | !is.infinite(diag$bounds.mat$fail), ]
interims <- finite.bounds$m
##### Obtain bias for range of true response probabilities ####
theta.vec <- seq(0.2, 0.8, 0.1)
summary.data <- vector("list", length(theta.vec))
raw.data <- vector("list", length(theta.vec))
set.seed(53)
for(i in 1:length(theta.vec)){
one.run <- pwbGS(theta=theta.vec[i], des=ad, interims=interims, nsims=1e5)
raw.data[[i]] <- one.run$results
summary.data[[i]] <- one.run$ests
}
all.gs <- do.call(rbind, summary.data)
stop.early.count.index <- grepl("Stopped early", rownames(all.gs))
stop.early.count <- round(all.gs$nsims[stop.early.count.index]/1e5, 3)
#### Plot results ####
#### Plot bias for all theta values ####
gs.plot <- ggplot(data=all.gs, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
gs.plot
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
gs.plot2 <- ggplot(data=all.gs[all.gs$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
gs.plot2
gridExtra::grid.arrange(gs.plot, gs.plot2)
# See results for individual theta:
showTable(bias.df=all.gs, theta=0.4)
stop.early.count <- round(all.simon$nsims[stop.early.count.index]/1e5, 3)
#### Plot bias for all theta values ####
simon.plot <- ggplot(data=all.simon, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
stop.early.count
#### Plot bias for all theta values ####
simon.plot <- ggplot(data=all.simon, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
stop.early.count
stop.early.count.index <- grepl("Stopped early", rownames(all.simon))
stop.early.count <- round(all.simon$nsims[stop.early.count.index]/1e5, 3)
stop.early.count
#### Plot bias for all theta values ####
simon.plot <- ggplot(data=all.simon, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot2 <- ggplot(data=all.simon[all.simon$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot2
theta.vec
stop.early.count
rm(list=ls())
# functions for finding precision weighted bias and displaying results:
source("R/pwbSimon.R")
source("R/pwbGS.R")
source("R/showTable.R")
#### Guide to new files ####
# This script simulates the results of a Simon design for a vector of response rates.
# We vary response rate theta from 0.1 to 0.9
#### Find Simon designs and select optimal designs ####
all.designs <- clinfun::ph2simon(pu=0.5, pa=0.6, ep1=0.05, ep2=0.1, nmax=500)
# Choose optimal Simon design:
opt.index <- which.min(all.designs$out[, "EN(p0)"])
des <- all.designs$out[opt.index, ]
##### Obtain bias for range of true response probabilities ####
theta.vec <- seq(0.1, 0.9, 0.1)
summary.data <- vector("list", length(theta.vec))
raw.data <- vector("list", length(theta.vec))
for(i in 1:length(theta.vec)){
one.run <- pwbSimon(theta=theta.vec[i], des=des, nsims=1e5)
raw.data[[i]] <- one.run$results
summary.data[[i]] <- one.run$ests
}
all.simon <- do.call(rbind, summary.data)
stop.early.count.index <- grepl("Stopped early", rownames(all.simon))
stop.early.count <- round(all.simon$nsims[stop.early.count.index]/1e5, 3)
##### UMVUE for Simon design #####
d2 <- des_gs(J=2,
pi0=0.5,
pi1=0.6,
alpha=0.05,
beta=0.1,
Nmin=233,
Nmax=233,
futility=TRUE,
efficacy=FALSE,
optimality="null_ess",
summary=TRUE)
est <- est_gs(des=d2, pi=theta.vec, method=c("umvue"))
umvue <- data.frame(matrix(ncol = length(names(all.simon)),
nrow = nrow(est$perf)))
names(umvue) <- names(all.simon)
umvue$theta <- est$perf$pi
umvue$bias <- est$perf$`Bias(hat(pi)|pi)`
umvue$type <- "UMVUE"
all.simon <- rbind(all.simon, umvue)
#### Plot bias for all theta values ####
simon.plot <- ggplot(data=all.simon, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
simon.plot2 <- ggplot(data=all.simon[all.simon$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
simon.plot2
gridExtra::grid.arrange(simon.plot, simon.plot2)
# See results for individual theta:
showTable(bias.df=all.simon, theta=0.4)
# This script simulates the results of single-arm multi-stage with binary
# outcome, for a single value of response rate theta.
#
# Find a multi-stage design for p0=0.5, p1=0.6, alpha=0.1, power=0.8 and
# satisfying various other parameters:
ad <- curtailment::singlearmDesign(nmin=50,
nmax=140,
C=20,
minstop=40,
p0=0.5,
p1=0.6,
alpha=0.1,
power=0.8,
minthetaE=1,
maxthetaF=0,
max.combns=1e3)
# Store interim points and corresponding stopping boundaries
diag <- curtailment::drawDiagram(ad) # diagram of design and stopping bounds
finite.bounds <- diag$bounds.mat[!is.infinite(diag$bounds.mat$success) | !is.infinite(diag$bounds.mat$fail), ]
interims <- finite.bounds$m
##### Obtain bias for range of true response probabilities ####
theta.vec <- seq(0.2, 0.8, 0.1)
summary.data <- vector("list", length(theta.vec))
raw.data <- vector("list", length(theta.vec))
set.seed(53)
for(i in 1:length(theta.vec)){
one.run <- pwbGS(theta=theta.vec[i], des=ad, interims=interims, nsims=1e5)
raw.data[[i]] <- one.run$results
summary.data[[i]] <- one.run$ests
}
all.gs <- do.call(rbind, summary.data)
stop.early.count.index <- grepl("Stopped early", rownames(all.gs))
stop.early.count <- round(all.gs$nsims[stop.early.count.index]/1e5, 3)
#### Plot results ####
#### Plot bias for all theta values ####
gs.plot <- ggplot(data=all.gs, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
gs.plot
#### Plot bias -- no subsetting of "stopped early" or "stopped at N" ####
gs.plot2 <- ggplot(data=all.gs[all.gs$type %in% c("All (naive)", "All (precision-weghted)"), ], mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in GS design",
subtitle="Includes proportion of trials stopped early")+
annotate("text", x=theta.vec, y=-0.01, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
geom_hline(aes(yintercept=0), col="grey", linetype="dashed")+
scale_x_continuous(breaks=theta.vec)
gs.plot2
gridExtra::grid.arrange(gs.plot, gs.plot2)
# See results for individual theta:
showTable(bias.df=all.gs, theta=0.4)
0.01*0.99/1000
0.4*0.6/1000
sqrt(0.4*0.6/1000)
sqrt(0.01*0.99/1000)
