results$reject <- s>r & results$early.stop==FALSE
results$n <- rep(N, nsims)
results$n[results$early.stop] <- n1
results$complete <- results$n==N
results$theta.hat <- results$responses/results$n
results$se <- sqrt(results$theta.hat * (1-results$theta.hat) / results$n)
# Add correction for (rare) instances of zero responses and all responses:
results$responses.cor <- results$responses
results$responses.cor[results$responses.cor==0] <- 0.5 # Add 0.5 when zero responses.
# Subtract 0.5 when all responses:
results$responses.cor[results$responses.cor==results$n] <- results$responses.cor[results$responses.cor==results$n]-0.5
# Calculate SE using corrected responses. Note: generally identical to uncorrected.
results$theta.hat.cor <- results$responses.cor/results$n
results$se.cor <- sqrt(results$theta.hat.cor * (1-results$theta.hat.cor) / results$n)
early.stop <- results[results$complete==FALSE, ] # Trials stopped early
stop.at.N <- results[results$complete==TRUE, ] # Trials not stopped early
##### Analyse results #####
early.stop.theta.bar <- mean(early.stop$theta.hat)
stop.at.N.theta.bar <- mean(stop.at.N$theta.hat)
all.theta.bar <- mean(results$theta.hat)
# Empirical SE:
early.stop.emp.SE <- sqrt((1/(nrow(early.stop)-1)) * sum((early.stop$theta.hat-early.stop.theta.bar)^2))
stop.at.N.emp.SE <- sqrt((1/(nrow(stop.at.N)-1)) * sum((stop.at.N$theta.hat-stop.at.N.theta.bar)^2))
all.emp.SE <- sqrt((1/(nsims-1)) * sum((results$theta.hat-all.theta.bar)^2))
emp.SE <- c(early.stop.emp.SE,
stop.at.N.emp.SE,
all.emp.SE,
NA)
# SE:
mean.SE <- c(mean(early.stop$se.cor),
mean(stop.at.N$se.cor),
mean(results$se.cor),
weighted.mean(results$se.cor, w=1/(results$se.cor)^2))
# Estimate of response rate:
theta.bar.vec <- c(early.stop.theta.bar,
stop.at.N.theta.bar,
all.theta.bar,
weighted.mean(x=results$theta.hat, w=1/(results$se.cor)^2))
bias <- theta.bar.vec-theta
trials <- c(nrow(early.stop),
nrow(stop.at.N),
nsims,
nsims)
ests <- data.frame(nsims=trials,
bias,
mean.SE,
emp.SE,
theta)
row.names(ests) <- c("Stopped early", "Complete", "All", "All (precision-weghted)")
ests$type <- c("Stopped early (naive)", "Complete (naive)", "All (naive)", "All (precision-weghted)")
mc.error.bias.all <- sqrt( 1/(nsims*(nsims-1)) * sum((results$theta.hat-all.theta.bar)^2) )
mc.error.se.all <- all.emp.SE/sqrt(2*(nsims-1))
all.data <- list(results=results,
ests=ests,
mc.error=c(mc.error.bias.all, mc.error.se.all))
return(all.data)
}
# This script simulates the results of a Simon design for a vector of response rates.
# We vary response rate theta from 0.1 to 0.9
#### Find Simon designs and select optimal designs ####
all.designs <- clinfun::ph2simon(pu=0.5, pa=0.6, ep1=0.05, ep2=0.1, nmax=500)
opt.index <- which.min(all.designs$out[,"EN(p0)"]) # Index of optimal design
opt <- all.designs$out[opt.index, ]
##### Obtain bias for range of true response probabilities ####
theta.vec <- seq(0.1, 0.9, 0.1)
summary.data <- vector("list", length(theta.vec))
raw.data <- vector("list", length(theta.vec))
for(i in 1:length(theta.vec)){
one.run <- pwbSimon(p=theta.vec[i], des=opt, nsims=1e5)
raw.data[[i]] <- one.run$results
summary.data[[i]] <- one.run$ests
}
all.simon <- do.call(rbind, summary.data)
stop.early.count.index <- grepl("Stopped early", rownames(all.simon))
stop.early.count <- round(all.simon$nsims[stop.early.count.index]/1e5, 2)
##### UMVUE for Simon design #####
d2 <- des_gs(J=2,
pi0=0.5,
pi1=0.6,
alpha=0.05,
beta=0.1,
Nmin=233,
Nmax=233,
futility=TRUE,
efficacy=FALSE,
optimality="null_ess",
summary=TRUE)
est <- est_gs(des=d2, pi=theta.vec, method=c("umvue"))
umvue <- data.frame(matrix(ncol = length(names(all.simon)), nrow = nrow(est$perf)))
names(umvue) <- names(all.simon)
umvue$p <- est$perf$pi
umvue$bias <- est$perf$`Bias(hat(pi)|pi)`
umvue$type <- "UMVUE"
all.simon <- rbind(all.simon, umvue)
simon.plot <- ggplot(data=all.simon, mapping=aes(x=p, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design -- precision-weighted vs naive",
subtitle="Includes naive estimates for early stopped vs complete trials and also prop'n stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0,1,0.1))
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
# Why is PWB worse? Possible reasons:
# (1) Problem is caused by corrections when there are zero responses or all responses.
# This would happen more at the extreme values of p, and this is indeed where
# we see the biggest difference in bias.
# (2) Mistake in code: when all trials end early and when all trials stop at N,
# precision-weighted bias should be identical to naive estimate. Check this,
# bearing in mind the fact that (1) above could be causing the difference in bias.
librarian::shelf(ggplot2, clinfun, xtable, DHARMa, martinlaw/curtailment, mjg211/singlearm)
# This script simulates the results of a Simon design for a vector of response rates.
# We vary response rate theta from 0.1 to 0.9
#### Find Simon designs and select optimal designs ####
all.designs <- clinfun::ph2simon(pu=0.5, pa=0.6, ep1=0.05, ep2=0.1, nmax=500)
opt.index <- which.min(all.designs$out[,"EN(p0)"]) # Index of optimal design
opt <- all.designs$out[opt.index, ]
##### Obtain bias for range of true response probabilities ####
theta.vec <- seq(0.1, 0.9, 0.1)
summary.data <- vector("list", length(theta.vec))
raw.data <- vector("list", length(theta.vec))
for(i in 1:length(theta.vec)){
one.run <- pwbSimon(p=theta.vec[i], des=opt, nsims=1e5)
raw.data[[i]] <- one.run$results
summary.data[[i]] <- one.run$ests
}
all.simon <- do.call(rbind, summary.data)
stop.early.count.index <- grepl("Stopped early", rownames(all.simon))
stop.early.count <- round(all.simon$nsims[stop.early.count.index]/1e5, 2)
##### UMVUE for Simon design #####
d2 <- des_gs(J=2,
pi0=0.5,
pi1=0.6,
alpha=0.05,
beta=0.1,
Nmin=233,
Nmax=233,
futility=TRUE,
efficacy=FALSE,
optimality="null_ess",
summary=TRUE)
est <- est_gs(des=d2, pi=theta.vec, method=c("umvue"))
umvue <- data.frame(matrix(ncol = length(names(all.simon)), nrow = nrow(est$perf)))
names(umvue) <- names(all.simon)
umvue$p <- est$perf$pi
umvue$bias <- est$perf$`Bias(hat(pi)|pi)`
umvue$type <- "UMVUE"
all.simon <- rbind(all.simon, umvue)
simon.plot <- ggplot(data=all.simon, mapping=aes(x=p, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design -- precision-weighted vs naive",
subtitle="Includes naive estimates for early stopped vs complete trials and also prop'n stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0,1,0.1))
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
# Why is PWB worse? Possible reasons:
# (1) Problem is caused by corrections when there are zero responses or all responses.
# This would happen more at the extreme values of p, and this is indeed where
# we see the biggest difference in bias.
# (2) Mistake in code: when all trials end early and when all trials stop at N,
# precision-weighted bias should be identical to naive estimate. Check this,
# bearing in mind the fact that (1) above could be causing the difference in bias.
# This script simulates the results of a Simon design for a vector of response rates.
# We vary response rate theta from 0.1 to 0.9
#### Find Simon designs and select optimal designs ####
all.designs <- clinfun::ph2simon(pu=0.5, pa=0.6, ep1=0.05, ep2=0.1, nmax=500)
opt.index <- which.min(all.designs$out[,"EN(p0)"]) # Index of optimal design
opt <- all.designs$out[opt.index, ]
##### Obtain bias for range of true response probabilities ####
theta.vec <- seq(0.1, 0.9, 0.1)
summary.data <- vector("list", length(theta.vec))
raw.data <- vector("list", length(theta.vec))
for(i in 1:length(theta.vec)){
one.run <- pwbSimon(theta=theta.vec[i], des=opt, nsims=1e5)
raw.data[[i]] <- one.run$results
summary.data[[i]] <- one.run$ests
}
all.simon <- do.call(rbind, summary.data)
stop.early.count.index <- grepl("Stopped early", rownames(all.simon))
stop.early.count <- round(all.simon$nsims[stop.early.count.index]/1e5, 2)
##### UMVUE for Simon design #####
d2 <- des_gs(J=2,
pi0=0.5,
pi1=0.6,
alpha=0.05,
beta=0.1,
Nmin=233,
Nmax=233,
futility=TRUE,
efficacy=FALSE,
optimality="null_ess",
summary=TRUE)
est <- est_gs(des=d2, pi=theta.vec, method=c("umvue"))
umvue <- data.frame(matrix(ncol = length(names(all.simon)), nrow = nrow(est$perf)))
names(umvue) <- names(all.simon)
umvue$p <- est$perf$pi
umvue$bias <- est$perf$`Bias(hat(pi)|pi)`
umvue$type <- "UMVUE"
all.simon <- rbind(all.simon, umvue)
simon.plot <- ggplot(data=all.simon, mapping=aes(x=p, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design -- precision-weighted vs naive",
subtitle="Includes naive estimates for early stopped vs complete trials and also prop'n stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0,1,0.1))
simon.plot
#ggsave(filename="simon_bias.png", device="png", plot=simon.plot, width=9, height=6)
# Why is PWB worse? Possible reasons:
# (1) Problem is caused by corrections when there are zero responses or all responses.
# This would happen more at the extreme values of p, and this is indeed where
# we see the biggest difference in bias.
# (2) Mistake in code: when all trials end early and when all trials stop at N,
# precision-weighted bias should be identical to naive estimate. Check this,
# bearing in mind the fact that (1) above could be causing the difference in bias.
point <- all.simon[all.simon$p==0.6, ]
rownames(point) <- point$type
print(xtable(point[, 1:4],
caption="Bias, mean SE and emp SE for Simon design when p=0.6",
align=rep("r", 5),
digits=c(0, 0, 3, 3, 3),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
file="simon_tab.tex",
sanitize.text.function=function(x){x})
simon.plot <- ggplot(data=all.simon, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design -- precision-weighted vs naive",
subtitle="Includes naive estimates for early stopped vs complete trials and also prop'n stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0,1,0.1))
simon.plot
all.simon
umvue
all.simon
umvue <- data.frame(matrix(ncol = length(names(all.simon)), nrow = nrow(est$perf)))
names(umvue) <- names(all.simon)
umvue$theta <- est$perf$pi
umvue$bias <- est$perf$`Bias(hat(pi)|pi)`
umvue$type <- "UMVUE"
all.simon <- rbind(all.simon, umvue)
simon.plot <- ggplot(data=all.simon, mapping=aes(x=theta, y=bias, col=type))+
geom_line(alpha=0.4, size=1)+
geom_point()+
labs(x="True response probability theta",
y="Bias (estimate - theta)",
title="Bias in Simon design -- precision-weighted vs naive",
subtitle="Includes naive estimates for early stopped vs complete trials and also prop'n stopped early")+
annotate("text", x=theta.vec, y=-0.15, label=stop.early.count)+
geom_vline(aes(xintercept=0.5), col="grey", linetype="dashed")+
geom_vline(aes(xintercept=0.6), col="grey", linetype="dashed")+
scale_x_continuous(breaks=seq(0,1,0.1))
simon.plot
700*2.5
all.simon
all.simon[all.simon$theta==0.2]
all.simon[all.simon$theta==0.2, ]
all.simon[all.simon$theta==0.3, ]
all.simon[all.simon$theta==0.1, ]
all.simon[all.simon$theta==0.2, ]
all.simon[all.simon$theta==0.3, ]
all.simon[all.simon$theta==0.4, ]
all.simon[all.simon$theta==0.2, ]
mean(1:10)
weighted.mean(x=1:10, w=rep(1, 11))
weighted.mean(x=1:10, w=rep(1, 10))
raw.data
raw.data[[2]]
t2 <- raw.data[[2]]
head(t2)
identical(t2$theta.hat, t2$theta.hat.cor)
identical(t2$se, t2$se.cor)
mean(t2$theta.hat)
mean(t2$theta.hat.cor)
weighted.mean(t2$theta.hat, t2$se)
weighted.mean(t2$theta.hat.cor, t2$se.cor)
all.simon
#showTable <-
theta
latex
showTable <- function(theta, latex=TRUE){
single.theta.df <- all.simon[all.simon$theta==theta, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, 3, 3, 3),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df[, 1:4]
}
showTable(0.2)
showTable(0.3)
?format
showTable <- function(theta, latex=TRUE){
single.theta.df <- all.simon[all.simon$theta==theta, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, 3, 3, 3),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
format(single.theta.df[, 1:4],
digits(6, 3, 3, 3))
}
showTable(0.3)
class(all.simon[,4])
names(all.simon)
class(all.simon[,5])
showTable <- function(theta, latex=TRUE){
single.theta.df <- all.simon[all.simon$theta==theta, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, 3, 3, 3),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
format(single.theta.df[, 1:4],
digits(6, 3, 3))
}
showTable(0.3)
class(all.simon)
names(all.simon)
digits()
digit
showTable <- function(theta, latex=TRUE, digit=3){
single.theta.df <- all.simon[all.simon$theta==theta, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(0.3)
showTable(0.2)
showTable(0.5)
showTable <- function(theta, latex=TRUE, digit=4){
single.theta.df <- all.simon[all.simon$theta==theta, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(0.5)
showTable <- function(theta, latex=TRUE, digit=3){
single.theta.df <- all.simon[all.simon$theta==theta, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(0.6)
showTable(0.7)
showTable(0.8)
class(all.simon$theta)
all.simon$theta==0.3
all.simon$theta-0.3
theta
showTable <- function(theta, latex=TRUE, digit=3){
single.theta.df <- all.simon[all.equal(all.simon$theta, theta), ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(0.8)
showTable <- function(theta, latex=TRUE, digit=3){
single.theta.df <- all.simon[all.equal(all.simon$theta, theta), ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(0.2)
theta=0.2
single.theta.df <- all.simon[all.equal(all.simon$theta, theta), ]
single.theta.df
all.simon$theta
theta
all.equal(all.simon$theta, theta)
isTRUE(all.equal(all.simon$theta, theta))
all.equal(all.simon$theta, theta)
?all.equal
abs(all.simon$theta-theta)<0.001
showTable <- function(theta, latex=TRUE, digit=3){
single.theta.df <- all.simon[abs(all.simon$theta-theta)<0.001, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(0.2)
showTable <- function(theta, latex=TRUE, digit=4){
single.theta.df <- all.simon[abs(all.simon$theta-theta)<0.001, ]
rownames(single.theta.df) <- single.theta.df$type
if(latex==TRUE){
print(xtable(single.theta.df[, 1:4],
caption=paste("Bias, mean SE and emp SE for Simon design when theta=", theta, sep=""),
align=rep("r", 5),
digits=c(0, 0, digit, digit, digit),
label="tab:simon"),
include.rownames=TRUE,
booktabs=TRUE,
sanitize.text.function=function(x){x})
}
single.theta.df$bias <- round(single.theta.df$bias, digit)
single.theta.df$mean.SE <- round(single.theta.df$mean.SE, digit)
single.theta.df$emp.SE <- round(single.theta.df$emp.SE, digit)
single.theta.df
}
showTable(theta=0.5)
showTable(theta=0.6)
showTable(theta=0.4)
